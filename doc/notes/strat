//@version=5
indicator(shorttitle = "SQZMOM_LB", title="Squeeze Momentum Indicator [LazyBear]", overlay=false)

length = input.int(20, title="BB Length")
mult = input.float(2.0,title="BB MultFactor")
lengthKC=input.int(20, title="KC Length")
multKC = input.float(1.5, title="KC MultFactor")

useTrueRange = input.bool(true, title="Use TrueRange (KC)")

// Calculate BB
basis = ta.sma(close, length)
dev = multKC * ta.stdev(close, length)
upperBB = basis + dev
lowerBB = basis - dev

// Calculate KC
ma = ta.sma(close, lengthKC)
rangevar = useTrueRange ? ta.tr : (high - low)
rangema = ta.sma(rangevar, lengthKC)
upperKC = ma + rangema * multKC
lowerKC = ma - rangema * multKC

sqzOn  = (lowerBB > lowerKC) and (upperBB < upperKC)
sqzOff = (lowerBB < lowerKC) and (upperBB > upperKC)
noSqz  = (sqzOn == false) and (sqzOff == false)

val = ta.linreg(source  -  ta.avg(ta.avg(ta.highest(high, lengthKC), ta.lowest(low, lengthKC)),ta.sma(close,lengthKC)),lengthKC,0)

bcolor = val > 0 ? (val > ta.nz(val[1]) ? color.lime : color.green) : (val < ta.nz(val[1]) ? color.red : color.maroon)
scolor = noSqz ? color.blue : (sqzOn ? color.black : color.gray)

plot(val, color=bcolor, style=plot.style_histogram, linewidth=4)
plot(0, color=scolor, style=plot.style_cross, linewidth=2)

// Trading Strategy
longCondition = ta.crossover(val, 0) and val > ta.na
shortCondition = ta.crossunder(val, 0) and val < ta.na

if (longCondition)
    strategy.entry("Long", strategy.long)

if (shortCondition)
    strategy.entry("Short", strategy.short)

